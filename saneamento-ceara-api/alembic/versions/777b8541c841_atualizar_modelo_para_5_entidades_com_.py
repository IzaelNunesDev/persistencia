"""Atualizar modelo para 5 entidades com dashboard

Revision ID: 777b8541c841
Revises: e594ba93cce0
Create Date: 2025-07-30 03:32:40.162030

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '777b8541c841'
down_revision: Union[str, None] = 'e594ba93cce0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Primeiro, remover as tabelas antigas
    op.drop_index('idx_ano', table_name='dados_saneamento_anuais')
    op.drop_index('idx_municipio_ano', table_name='dados_saneamento_anuais')
    op.drop_index('ix_dados_saneamento_anuais_id', table_name='dados_saneamento_anuais')
    op.drop_table('dados_saneamento_anuais')
    op.drop_index('ix_capitais_id', table_name='capitais')
    op.drop_table('capitais')
    
    # Adicionar novas colunas Ã s tabelas existentes
    op.add_column('municipios', sa.Column('sigla_uf', sa.String(length=2), nullable=False, server_default='CE'))
    op.add_column('municipios', sa.Column('populacao_urbana_estimada_2022', sa.Integer(), nullable=True))
    op.add_column('municipios', sa.Column('populacao_total_estimada_2022', sa.Integer(), nullable=True))
    op.add_column('municipios', sa.Column('quantidade_sedes_agua', sa.Integer(), nullable=True))
    op.add_column('municipios', sa.Column('quantidade_sedes_esgoto', sa.Integer(), nullable=True))
    op.add_column('municipios', sa.Column('nome_prestador_predominante', sa.String(length=255), nullable=True))
    op.drop_column('municipios', 'mesorregiao')
    op.drop_column('municipios', 'ddd')
    op.drop_column('municipios', 'microrregiao')
    
    op.add_column('prestadores_servico', sa.Column('total_investido_historico', sa.Float(), nullable=True))
    op.add_column('prestadores_servico', sa.Column('media_arrecadacao_anual', sa.Float(), nullable=True))
    op.add_column('prestadores_servico', sa.Column('quantidade_municipios_atendidos', sa.Integer(), nullable=True))
    op.add_column('prestadores_servico', sa.Column('ano_primeiro_registro', sa.Integer(), nullable=True))
    
    # Criar novas tabelas
    op.create_table('indicadores_desempenho_anuais',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('municipio_id', sa.String(length=7), nullable=False),
    sa.Column('prestador_id', sa.Integer(), nullable=False),
    sa.Column('populacao_atendida_agua', sa.Integer(), nullable=True),
    sa.Column('populacao_atendida_esgoto', sa.Integer(), nullable=True),
    sa.Column('indice_atendimento_agua', sa.Float(), nullable=True),
    sa.Column('indice_coleta_esgoto', sa.Float(), nullable=True),
    sa.Column('indice_tratamento_esgoto', sa.Float(), nullable=True),
    sa.Column('indice_perda_faturamento', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['municipio_id'], ['municipios.id_municipio'], ),
    sa.ForeignKeyConstraint(['prestador_id'], ['prestadores_servico.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ano', 'municipio_id', 'prestador_id', name='uq_indicadores_ano_municipio_prestador')
    )
    op.create_index('idx_indicadores_ano', 'indicadores_desempenho_anuais', ['ano'], unique=False)
    op.create_index('idx_indicadores_municipio_ano', 'indicadores_desempenho_anuais', ['municipio_id', 'ano'], unique=False)
    op.create_index('idx_indicadores_prestador_ano', 'indicadores_desempenho_anuais', ['prestador_id', 'ano'], unique=False)
    op.create_index(op.f('ix_indicadores_desempenho_anuais_id'), 'indicadores_desempenho_anuais', ['id'], unique=False)
    
    op.create_table('financeiro_anuais',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('indicador_id', sa.Integer(), nullable=False),
    sa.Column('receita_operacional_total', sa.Float(), nullable=True),
    sa.Column('despesa_exploracao', sa.Float(), nullable=True),
    sa.Column('despesa_pessoal', sa.Float(), nullable=True),
    sa.Column('despesa_energia', sa.Float(), nullable=True),
    sa.Column('despesa_total_servicos', sa.Float(), nullable=True),
    sa.Column('investimento_total_prestador', sa.Float(), nullable=True),
    sa.Column('credito_a_receber', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['indicador_id'], ['indicadores_desempenho_anuais.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('indicador_id')
    )
    op.create_index(op.f('ix_financeiro_anuais_id'), 'financeiro_anuais', ['id'], unique=False)
    
    op.create_table('recursos_hidricos_anuais',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('indicador_id', sa.Integer(), nullable=False),
    sa.Column('volume_agua_produzido', sa.Float(), nullable=True),
    sa.Column('volume_agua_consumido', sa.Float(), nullable=True),
    sa.Column('volume_agua_faturado', sa.Float(), nullable=True),
    sa.Column('volume_esgoto_coletado', sa.Float(), nullable=True),
    sa.Column('volume_esgoto_tratado', sa.Float(), nullable=True),
    sa.Column('consumo_eletrico_sistemas_agua', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['indicador_id'], ['indicadores_desempenho_anuais.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('indicador_id')
    )
    op.create_index(op.f('ix_recursos_hidricos_anuais_id'), 'recursos_hidricos_anuais', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recursos_hidricos_anuais_id'), table_name='recursos_hidricos_anuais')
    op.drop_table('recursos_hidricos_anuais')
    op.drop_index(op.f('ix_financeiro_anuais_id'), table_name='financeiro_anuais')
    op.drop_table('financeiro_anuais')
    op.drop_index(op.f('ix_indicadores_desempenho_anuais_id'), table_name='indicadores_desempenho_anuais')
    op.drop_index('idx_indicadores_prestador_ano', table_name='indicadores_desempenho_anuais')
    op.drop_index('idx_indicadores_municipio_ano', table_name='indicadores_desempenho_anuais')
    op.drop_index('idx_indicadores_ano', table_name='indicadores_desempenho_anuais')
    op.drop_table('indicadores_desempenho_anuais')
    
    op.drop_column('prestadores_servico', 'ano_primeiro_registro')
    op.drop_column('prestadores_servico', 'quantidade_municipios_atendidos')
    op.drop_column('prestadores_servico', 'media_arrecadacao_anual')
    op.drop_column('prestadores_servico', 'total_investido_historico')
    
    op.add_column('municipios', sa.Column('microrregiao', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('municipios', sa.Column('ddd', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.add_column('municipios', sa.Column('mesorregiao', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('municipios', 'nome_prestador_predominante')
    op.drop_column('municipios', 'quantidade_sedes_esgoto')
    op.drop_column('municipios', 'quantidade_sedes_agua')
    op.drop_column('municipios', 'populacao_total_estimada_2022')
    op.drop_column('municipios', 'populacao_urbana_estimada_2022')
    op.drop_column('municipios', 'sigla_uf')
    
    op.create_table('capitais',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('municipio_id', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('data_fundacao', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('prefeito_atual', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['municipio_id'], ['municipios.id_municipio'], name='capitais_municipio_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='capitais_pkey'),
    sa.UniqueConstraint('municipio_id', name='capitais_municipio_id_key')
    )
    op.create_index('ix_capitais_id', 'capitais', ['id'], unique=False)
    
    op.create_table('dados_saneamento_anuais',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ano', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('municipio_id', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('prestador_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('populacao_total_atendida_agua', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('populacao_total_atendida_esgoto', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('indice_atendimento_agua', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('indice_coleta_esgoto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('indice_tratamento_esgoto', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('indice_perda_faturamento', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('volume_agua_produzido', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('volume_esgoto_tratado', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('receita_operacional_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('despesa_total_servicos', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('investimento_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['municipio_id'], ['municipios.id_municipio'], name='dados_saneamento_anuais_municipio_id_fkey'),
    sa.ForeignKeyConstraint(['prestador_id'], ['prestadores_servico.id'], name='dados_saneamento_anuais_prestador_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dados_saneamento_anuais_pkey'),
    sa.UniqueConstraint('ano', 'municipio_id', 'prestador_id', name='uq_ano_municipio_prestador')
    )
    op.create_index('ix_dados_saneamento_anuais_id', 'dados_saneamento_anuais', ['id'], unique=False)
    op.create_index('idx_municipio_ano', 'dados_saneamento_anuais', ['municipio_id', 'ano'], unique=False)
    op.create_index('idx_ano', 'dados_saneamento_anuais', ['ano'], unique=False)
    # ### end Alembic commands ###
