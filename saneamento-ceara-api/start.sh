#!/bin/bash

# Script de inicializa√ß√£o para produ√ß√£o
set -e

echo "üöÄ Iniciando API de Saneamento do Cear√°..."

# Verificar se as vari√°veis de ambiente est√£o configuradas
if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è  DATABASE_URL n√£o configurada, usando configura√ß√£o local"
fi

# Configurar porta
export PORT=${PORT:-8000}
echo "üåê Usando porta: $PORT"

# Executar migra√ß√µes do banco de dados
echo "üìä Executando migra√ß√µes do banco de dados..."
alembic upgrade head

# Verificar se o banco est√° vazio e carregar dados se necess√°rio
echo "üîç Verificando se o banco precisa de dados iniciais..."
python -c "
import sys
sys.path.append('.')
from app.database import SessionLocal
from app import models

db = SessionLocal()
try:
    # Verificar se h√° munic√≠pios
    municipio_count = db.query(models.Municipio).count()
    print(f'Munic√≠pios encontrados: {municipio_count}')
    
    if municipio_count == 0:
        print('Banco vazio detectado. Carregando dados iniciais...')
        import subprocess
        subprocess.run(['python', 'scripts/load_data.py'], check=True)
        subprocess.run(['python', 'scripts/create_prestadores.py'], check=True)
        subprocess.run(['python', 'scripts/enhance_municipios.py'], check=True)
        print('‚úÖ Dados carregados com sucesso!')
    else:
        print('‚úÖ Banco j√° possui dados.')
finally:
    db.close()
"

# Iniciar a aplica√ß√£o com uvicorn diretamente
echo "üåê Iniciando servidor na porta $PORT..."
exec uvicorn app.main:app --host 0.0.0.0 --port $PORT 